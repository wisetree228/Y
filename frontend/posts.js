// Sample post data
const samplePosts = [
    {
        id: 1,
        author: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
        date: '15 —Ñ–µ–≤—Ä–∞–ª—è 2025',
        content: '–ë—É–¥—É—â–µ–µ —É–∂–µ –∑–¥–µ—Å—å. –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –º–µ–Ω—è—é—Ç –º–∏—Ä –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –º—ã —É—Å–ø–µ–≤–∞–µ–º —ç—Ç–æ –æ—Å–æ–∑–Ω–∞—Ç—å.',
        likes: 42,
        comments: 8
    },
    {
        id: 2,
        author: '–ú–∞—Ä–∏—è',
        date: '15 —Ñ–µ–≤—Ä–∞–ª—è 2025',
        content: '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º–æ–π —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∂–∏–∑–Ω–∏. –ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ —ç—Ç–æ–º—É?',
        likes: 127,
        comments: 23
    },
    {
        id: 3,
        author: '–î–º–∏—Ç—Ä–∏–π',
        date: '15 —Ñ–µ–≤—Ä–∞–ª—è 2025',
        content: '–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏—è.',
        likes: 85,
        comments: 15
    }
];

// Function to create a post element
function createPostElement(post) {
    const postElement = document.createElement('div');
    postElement.className = 'post';
    postElement.innerHTML = `
        <div class="post-header">
            <span class="post-author">${post.author}</span>
            <span class="post-date">${post.date}</span>
        </div>
        <div class="post-content">
            ${post.content}
        </div>
        <div class="post-actions">
            <button class="action-btn like-btn" data-post-id="${post.id}">
                <span class="action-icon">‚ô•</span>
                <span class="action-count">${post.likes}</span>
            </button>
            <button class="action-btn comment-btn" data-post-id="${post.id}">
                <span class="action-icon">üí¨</span>
                <span class="action-count">${post.comments}</span>
            </button>
        </div>
    `;
    return postElement;
}

// Function to initialize the feed
function initializeFeed() {
    const feed = document.querySelector('.feed');
    const createPost = document.querySelector('.create-post');
    
    // Add sample posts after the create-post element
    samplePosts.forEach(post => {
        feed.appendChild(createPostElement(post));
    });
}

// Initialize the feed when the page loads
document.addEventListener('DOMContentLoaded', () => {
    initializeFeed();

    // Add event listeners for buttons
    document.querySelector('.channels-btn').addEventListener('click', () => {
        console.log('Channels button clicked');
    });

    document.querySelector('.profile-btn').addEventListener('click', () => {
        console.log('Profile button clicked');
    });

    // Add event listener for search
    const searchInput = document.querySelector('.search-input');
    searchInput.addEventListener('input', (e) => {
        console.log('Searching for:', e.target.value);
    });

    // Add event listener for post creation
    const postInput = document.querySelector('.post-input');
    const postBtn = document.querySelector('.post-btn');
    
    postBtn.addEventListener('click', () => {
        const content = postInput.value.trim();
        if (content) {
            const newPost = {
                id: samplePosts.length + 1,
                author: '–í—ã',
                date: new Date().toLocaleDateString('ru-RU', {
                    day: 'numeric',
                    month: 'long',
                    year: 'numeric'
                }),
                content: content,
                likes: 0,
                comments: 0
            };
            
            const feed = document.querySelector('.feed');
            feed.insertBefore(createPostElement(newPost), feed.children[1]);
            postInput.value = '';
        }
    });

    // Add event listeners for post actions
    document.addEventListener('click', (e) => {
        if (e.target.closest('.like-btn')) {
            const btn = e.target.closest('.like-btn');
            const countElement = btn.querySelector('.action-count');
            let count = parseInt(countElement.textContent);
            countElement.textContent = count + 1;
            btn.style.color = '#4a90e2';
        }
        if (e.target.closest('.comment-btn')) {
            const postId = e.target.closest('.comment-btn').dataset.postId;
            console.log('Comment clicked for post:', postId);
        }
    });
});